{
  "ConsoleApps/App1/App1.html": {
    "href": "ConsoleApps/App1/App1.html",
    "title": "PLACEHOLDER | DW Scripts Lib",
    "keywords": "PLACEHOLDER TODO: Add .NET projects to the src folder and run docfx to generate REAL API Documentation!"
  },
  "PowerShell/Add-TermGroupSPAdmin/Add-TermGroupSPAdmin.html": {
    "href": "PowerShell/Add-TermGroupSPAdmin/Add-TermGroupSPAdmin.html",
    "title": "Add-TermGroupSPAdmin | DW Scripts Lib",
    "keywords": "Add-TermGroupSPAdmin SYNOPSIS This script can be used to add the sp add-in account (app@sharepoint) to a term group. In the modern taxonomy store this cannot be done manually anymore. SOURCE https://github.com/dlw-digitalworkplace/dw-script-lib/tree/main/PowerShell/Add-TermGroupSPAdmin AUTHOR Name: Jens Van Dale Email: jens.vandale@delaware.pro SYNTAX Add admin to tenant taxonomy store .\\Add-TermGroupSPAdmin.ps1 -siteUrl <string> -termGroupName <string> Prerequisites The following PowerShell modules need to be installed: PnP.PowerShell SharePoint Online Management Shell Description The following steps are executed in this script: Some SharePoint dll's are loaded from the SharePoint Online Management Shell (Taxonomy) A connection to SharePoint is made using PnP.PowerShell A taxonomy session is build The term gropu is loaded based on the provided term group name The app@sharepoint account is added as a admin to this term group The SharePoint connection is disconnected EXAMPLES EXAMPLE 1 This command will add the app@sharepoint account as an admin to the Products term group on the contoso tenant .\\Add-TermGroupSPAdmin.ps1 -siteUrl \"https://contoso-admin.sharepoint.com\" -termGroupName \"Products\" Tags SharePoint online Taxonomy"
  },
  "README.html": {
    "href": "README.html",
    "title": "dw-script-lib | DW Scripts Lib",
    "keywords": "dw-script-lib Library of reusable PowerShell scripts and console application (C#) containing a broad range of M365 integration options. Check out this link for the full documentation."
  },
  "general/index.html": {
    "href": "general/index.html",
    "title": "Introduction | DW Scripts Lib",
    "keywords": "Introduction Welcome to the dw-script-lib. This page will give you all relevant information regarding this library. Check out the navigation to the left to find your topic"
  },
  "general/submission-guidelines.html": {
    "href": "general/submission-guidelines.html",
    "title": "Submission guidelines | DW Scripts Lib",
    "keywords": "Submission guidelines Do you have a possible interesting and reusable script, then this page is for you. There are two options to submit: Using a Pull Request (technical) Using a GitHub Issue Submitting a Pull Request The first step when submitting a new script, is to pull the code to your local machine (git clone https://github.com/dlw-digitalworkplace/dw-script-lib.git). Create a new branch that starts from the main branch and use the following naming convention: submission/[name-of-script] Create a new folder in the PowerShell or ConsoleApps folder (depending on what you are submitting). Give the folder a clear name (e.g. Add-UserToGroup, Update-SharePointListColumn, ...) Copy the content Example.md file from the /Templates to your new folder. (The templates folder contains an example structure of how your scripts folder should look like) Add the PowerShell script or Console app code to the same folder. Make sure the PS filename is the same as the .md file Update the .md file with all the needed details Update the toc.yml file in the PowerShell or ConsoleApps folder and include your new script. Navigate to GitHub and create a new pull request into the main branch. Selec either the 'New PowerShell Script' or 'New Console Application' template and fill in all the details Wait for approval ðŸŽ‰ Creating a GitHub Issue Navigate to the GitHub repo Go to \"Issues\" and create a new one Select the 'Script Submission Request' template Fill in all the template details. Someone from the dw-script-lib team will contact you ðŸŽ‰"
  },
  "index.html": {
    "href": "index.html",
    "title": "DW Script Lib. | DW Scripts Lib",
    "keywords": "DW Script Lib. Welcome to the dw-script-lib documentation page. This library is intented to have one centralized location of all PowerShell scripts and Console applications that are reusable. Here you will find all relevant information regarding the script (how to use them, how to contribute, ...). General information The general information page will give you all the details you need about this library. Do you want to contribute to the library? Do you have a script that you think might be usefull? do you see additions to the framework itself? All these question will be handled there PowerShell The PowerShell section is the place-to-be for all Microfoft relates PowerShell script. All the scripts are listed with all the needed information like prerequisites, technology and even examples Console Applications Do you think PowerShell will not solve your problem and that you will need some C# magic, definately check out the Console Apps sections. Here you will find small console applications that interact with Miscrosoft systems with documentation and examples Search Not sure what you are looking for? Just use the search box in the upper right corner and see what you can find ðŸ˜Š. Issues If you encounter any kind of issues with this library, feel free to log an issue on GitHub"
  }
}